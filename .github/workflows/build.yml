name: Build Proxmox Backup Client

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

jobs:
  build:
    runs-on: ubuntu-latest
    #runs-on: [self-hosted, linux]
    container:
      image: archlinux:base-devel
      options: --privileged
    permissions:
      contents: write
    env:
      BUILD_DIR: /opt/builds
      AUR_PKG: proxmox-backup-client
      REPO_DIR: /opt/repo/archlinux/custom/os/x86_64/

    steps:
      - name: Setup system
        run: |
          set -e
          pacman -Syu --noconfirm
          pacman -S --noconfirm \
            git \
            sudo \
            base-devel \
            util-linux \
            glibc \
            pacman-contrib \
            rust \
            cargo
          pacman -S --noconfirm nodejs npm

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create build environment
        run: |
          set -e
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/builder
          mkdir -p ${{ env.BUILD_DIR }}
          chown -R builder:builder ${{ env.BUILD_DIR }}

      - name: Cache downloaded sources
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.BUILD_DIR }}/.cache
            /var/cache/pacman/pkg/
          key: ${{ runner.os }}-pkg-cache-${{ hashFiles('**/PKGBUILD') }}
          restore-keys: |
            ${{ runner.os }}-pkg-cache-

      - name: Clone AUR package
        run: |
          set -e
          cd ${{ env.BUILD_DIR }}
          sudo -u builder git clone --depth=1 https://aur.archlinux.org/${{ env.AUR_PKG }}.git
          chown -R builder:builder ${{ env.AUR_PKG }}

      - name: Build package
        run: |
          set -e
          cd ${{ env.BUILD_DIR }}/${{ env.AUR_PKG }}
      
          # 1. Best practice: Ensure the 'builder' user owns the files.
          sudo chown -R builder:builder .
      
          # 2. Set RUSTFLAGS to suppress all warnings and the fatal error.
          #    We are adding flags for:
          #    - unused_imports, deprecated, unused_unsafe, unused_parens (new warnings)
          #    - dangerous_implicit_autorefs (the build-breaking error)
          export RUSTFLAGS="\
          -A dead_code \
          -A mismatched_lifetime_syntaxes \
          -A unused_imports \
          -A deprecated \
          -A unused_unsafe \
          -A unused_parens \
          -A dangerous_implicit_autorefs"
      
          # 3. Run the build as the 'builder' user.
          #    The exported RUSTFLAGS will override the default compiler behavior.
          sudo -u builder makepkg -s --noconfirm

      - name: Create package repository
        run: |
          set -e
          mkdir -p ${{ env.REPO_DIR }}
          chown -R builder:builder ${{ env.REPO_DIR }}
          mv ${{ env.BUILD_DIR }}/${{ env.AUR_PKG }}/*.pkg.tar.zst ${{ env.REPO_DIR }}
          cd ${{ env.REPO_DIR }}
          repo-add custom.db.tar.gz *.pkg.tar.zst

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /opt/repo
          publish_branch: repo
          force_orphan: true
          enable_jekyll: false
          commit_message: "Update package repository"

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.AUR_PKG }}-package
          path: ${{ env.REPO_DIR }}/*.pkg.tar.zst
